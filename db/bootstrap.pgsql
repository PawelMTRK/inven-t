create schema api;

-- /categories
create table api.categories (
    id int primary key generated by default as identity,
    name varchar(80) not null,
    description varchar(255)
);

-- /items
create table api.items (
    id int primary key generated by default as identity,
    name varchar(80) not null,
    amount int not null check(0 <= amount),
    code char(5) not null,
    category_id int references api.categories(id)
);

create function api_item_code() returns trigger as $$
begin
    NEW.code := upper(substring(NEW.name for 2) || lpad(NEW.id::text, 3, '0'));
    return NEW;
end;
$$ language plpgsql;

create trigger api_items_update_code before insert or update on api.items
for each row execute function api_item_code();

-- /orders
create table api.orders (
    id int primary key generated by default as identity,
    supplier varchar(80) not null,
    ordered_date date not null,
    amount int not null check(0 < amount),
    item_id int references api.items(id)
);

-- /categories_info
create view api.categories_info as
    select c.name, count(i.name) as total_items
        from api.items as i
        right join api.categories as c on i.category_id = c.id
        group by c.name;

create role anon;
grant usage on schema api to anon;
grant select on all tables in schema api to anon;
